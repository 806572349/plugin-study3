<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
  <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
    <!-- 通用Mapper的插件com.github.abel533.generator.MapperPlugin，该插件有一个必选的<property>属性mappers，这里的mappers和通用Mapper中的mappers配置含义一样，就是我们使用的通用Mapper接口，多个通用Mapper接口可以用逗号隔开 -->
    <!-- 关于本插件，最重要的内容就是上面这个配置。下面要说的其他配置和普通的一致。 -->
    <property name="javaFileEncoding" value="utf-8"/>

    <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
      <property name="mappers" value="com.yb.user.repo.IBaseMapper"/>
    </plugin>



	<!-- mybatis-generator:generate -e -->
    <!-- 数据库配置信息，由于需要连接数据库，需要保证项目的classpath下面有数据库的JDBC驱动 -->
  <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://rm-bp1k8k19df23688cho.mysql.rds.aliyuncs.com:3306/money_user?characterEncoding=utf8"
                        userId="root" password="Kd664783" />
   

    <!-- 生成实体类的配置，是一个必须配置的内容 -->
    <javaModelGenerator targetPackage="com.yb.user.model" targetProject="src/main/java"/>

    <!-- sqlMapGenerator是一个可选的配置，配置后可以生成Mapper接口对应的XML文件 -->
    <sqlMapGenerator targetPackage="mapper"  targetProject="src/main/resources"/>

    <!-- 通用Mapper接口的配置，配置javaClientGenerator后会生成对应的接口文件，该接口会自动继承前面配置的通用Mapper接口 -->
    <javaClientGenerator targetPackage="com.yb.user.entity" targetProject="src/main/java" type="XMLMAPPER" />

    <!-- 最后一个配置table,这里使用SQL通配符%来匹配所有表。generatedKey意味着所有的表都有一个id自增的主键，在生成实体类的时候会根据该配置生成相应的注解 -->
    <table tableName="%" >
      <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
    </table>
  </context>
</generatorConfiguration>